{% extends ':default:layout.html.twig' %}

{% block title %}Order Products{% endblock %}
{% block page_title %}
    Order {{ channel.name }} Products
{% endblock page_title %}

{% block page_name %}
    <div class="">
        <img src="/images/logo-{{ channel.id }}.png" style="max-width: 121px;">
    </div>
{% endblock page_name %}

{% block actions %}
{% endblock actions %}

{% block footer %}
    <script>
        $(document).ready(function () {
            $('#part-table').DataTable({
            "iDisplayLength": 50, responsive: true, "fnDrawCallback": function(oSettings) {if (oSettings._iDisplayLength > oSettings.fnRecordsDisplay()) {$(oSettings.nTableWrapper).find('.dataTables_paginate').hide();}} });

            var grid = $('.grid').isotope({
                itemSelector: '.element-item',
                layoutMode: 'fitRows'
            });
            // bind filter button click
            $('.filters-button-group').on( 'click', 'button', function() {
                var filterValue = $( this ).attr('data-filter');
                // use filterFn if matches value
                filterValue = filterFns[ filterValue ] || filterValue;
                grid.isotope({ filter: filterValue });
                filterValue = filterValue.replace(/\./g,'');
                console.log(filterValue);

                $('.fa.fa-circle').addClass('fa-circle-thin');
                $('.fa-circle').removeClass('fa-circle');

                if(filterValue == '*') {
                    $('#side-all').removeClass('fa-circle-thin');
                    $('#side-all').addClass('fa-circle');
                }
                else {
                    var tmp = '#side-'+filterValue;
                    console.log(tmp);
                    $(tmp).removeClass('fa-circle-thin');
                    $(tmp).addClass('fa-circle');
                }
            });
            // change is-checked class on buttons
            $('.button-group').each( function( i, buttonGroup ) {
                var buttonGroup = $( buttonGroup );
                buttonGroup.on( 'click', 'button', function() {
                    buttonGroup.find('.is-checked').removeClass('is-checked');
                    $( this ).addClass('is-checked');
                });
            });
        });

        // filter functions
        var filterFns = {
            // show if number is greater than 50
            numberGreaterThan50: function() {
                var number = $(this).find('.number').text();
                return parseInt( number, 10 ) > 50;
            },
            // show if name ends with -ium
            ium: function() {
                var name = $(this).find('.name').text();
                return name.match( /ium$/ );
            }
        };



        var app = angular.module('myApp', ['ngMaterial']);
        app.controller('myCtrl', ['$scope', function($scope) {
            $scope.is_distributor = {% if is_granted('ROLE_DISTRIBUTOR') %}1{% else %}0{% endif %};
            $scope.is_retailer = {% if is_granted('ROLE_RETAILER') %}1{% else %}0{% endif %};
            $scope.products = {{ products | json_encode | raw}};
            $scope.states = {{ states | json_encode | raw}};
            $scope.user_retailers = {{ user_retailers | json_encode | raw}};
            $scope.warehouses = {{ warehouses | json_encode | raw}};
            $scope.user_warehouses = {{ user_warehouses | json_encode | raw}};
            $scope.cart_num_items = 0;
            $scope.cart_total = 0.00;
            $scope.product_variant_order_quan = [];
            $scope.cart = [];
            $scope.form_info = {};
            $scope.form_info.pick_up_date = new Date();
            $scope.form_info.pick_up = false;
            $scope.form_info.ship = false;
            $scope.hasError = [];

            $scope.validate = function () {
                if($scope.form_info['pick_up'] == true) {
                    var is_error = 0;
                    if(typeof($scope.form_info['po']) == "undefined" || $scope.form_info['po'] == null) {
                        is_error += 1;
                        $('#po').addClass('error');
                    }
                }
            };

            $scope.updateCart = function (variantId, cost, max) {

                if(typeof($scope.cart[variantId]) != "undefined" && $scope.cart[variantId] !== null) {
                    $scope.cart[variantId].quantity = $scope.product_variant_order_quan[variantId];
                }
                else {
                    $scope.cart[variantId] = {
                        variant_id: variantId,
                        quantity: $scope.product_variant_order_quan[variantId],
                        cost: cost
                    };
                }

                if($scope.product_variant_order_quan[variantId] > max) {
                    if(jQuery.inArray(variantId, $scope.hasError) == -1) {
                        $('#'+variantId).addClass('error');
                        $('#submit-button').prop('disabled', true);
                        $('#submit-button').addClass('button-error');
                        $scope.hasError.push(variantId);
                    }
                }
                else {
                    if(jQuery.inArray(variantId, $scope.hasError) > -1) {
                        $('#'+variantId).removeClass('error', 300);
                        var index = $scope.hasError.indexOf(variantId);
                        $scope.hasError.splice(index,1);
                        if($scope.hasError.length == 0) {
                            $('#submit-button').removeClass('button-error');
                            $('#submit-button').prop('disabled', false);
                        }
                    }
                }

                $scope.calculateCart();
            };

            $scope.updateShipForm = function () {
                var user_id = $scope.cart['dist_ship'];
                if(user_id == undefined)
                    user_id = {{ app.user.id }};
                $.ajax({
                        type: 'POST',
                        url: "{{ path('api_get_user_info_for_order_form') }}",
                        dataType: 'json',
                        data: {user_id: user_id},
                        success: function (data) {
                            $scope.$apply(function () {
                                $scope.form_info = data;
                                $('#state').val(data['state']);
                            });
                        }
                    });
            };

            $scope.submitCart = function () {
                var errors = $scope.validate();
                console.log(errors);
                $('.fa.fa-circle').addClass('fa-circle-thin');
                $('.fa-circle').removeClass('fa-circle');

                $('#side-review').removeClass('fa-circle-thin');
                $('#side-review').addClass('fa-circle');

                if($scope.form_info['pick_up'] == false && $scope.form_info['ship'] == false)
                    $('#error-message').append("<div class='alert alert-error alert-dismissible'><button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button>Please select to Ship the Items or to Pick them up.</div>");
                else if($scope.cart_num_items == 0)
                    $('#error-message').append("<div class='alert alert-error alert-dismissible'><button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button>Please add at least one item to your cart.</div>");
                else if (errors <= 0) {
                    addSpinner();
                    $.ajax({
                        type: 'POST',
                        url: "{{ path('api_save_products_order_form') }}",
                        dataType: 'json',
                        data: {cart: $scope.cart,
                            form_info: $scope.form_info,
                            channel_id: {{ channel.id}},
                            total: $scope.cart_total
                        },
                        success: function (data) {
                                window.location.href = Routing.generate('order_products_review', {id_channel: {{ channel.id}}, id_order: data });
                        }
                    });
                }

            };

            $scope.warehouseChange = function () {
                var warehouse = $scope.cart['pick_up_warehouse'];
                $scope.setAll($scope.product_variant_order_quan, 0);

                $.ajax({
                    type: 'POST',
                    url: "{{ path('api_update_products_for_channel') }}",
                    dataType: 'json',
                    data: {warehouse_id: $scope.cart['pick_up_warehouse'].id, user_id: {{ user.id}}, channel_id: {{ channel.id }}  },
                    success: function (data) {
                        $scope.$apply(function () {
                            $scope.cart = [];
                            $scope.products = data;
                            $scope.cart['pick_up_warehouse'] = warehouse;
                        });
                    }
                });
            };

            $scope.setAll = function (a, v) {
                var i, n = a.length;
                for (i = 0; i < n; ++i) {
                    a[i] = v;
                }
                $('.variant_quantity').removeClass('error');
                $scope.cart_num_items = 0;
                $scope.cart_total = 0.00;
                $('#submit-button').removeClass('button-error');
                $('#submit-button').prop('disabled', false);
                $scope.hasError = [];
            };
            
            $scope.getAllProducts = function () {
                $scope.setAll($scope.product_variant_order_quan, 0);
                $.ajax({
                    type: 'POST',
                    url: "{{ path('api_update_products_for_channel') }}",
                    dataType: 'json',
                    data: {user_id: {{ user.id}}, channel_id: {{ channel.id }}  },
                    success: function (data) {
                        $scope.$apply(function () {
                            $scope.cart = [];
                            $scope.products = data;
                        });
                    }
                });
            };

            $scope.calculateCart = function () {
                $scope.cart_num_items = 0;
                $scope.cart_total = 0.00;
                angular.forEach($scope.cart, function(value, key) {
                    $scope.cart_num_items += value.quantity;
                    $scope.cart_total += value.quantity * value.cost;
                });
            }

            $scope.shipping = function () {
                if($scope.form_info['ship'] == true) {
                        $('#ship').show();
                    $scope.form_info['pick_up'] = false;
                    $('#pick_up_date').hide();
                    $('#pick_up_agent').hide();
                    $('#pick_up_warehouse').hide();
                }
                else {
                    $('#ship').hide();
                    $scope.form_info['pick_up'] = false;

                }

            };

            $scope.validate = function() {
                var count = 0;
                var po = $('#po').val();
                var ship_name = $('#ship_name').val();
                var address = $('#address').val();
                var city = $('#city').val();
                var state = $('#state option:selected').val();
                var zip = $('#zip').val();
                var phone = $('#phone').val();
                var email = $('#email').val();
                var agent_name = $('#agent_name').val();
                var pick_up_warehouse = $('#warehouse_pick_up').val();

                if($scope.form_info['ship']) {
                    if (ship_name == '') {
                        count += 1;
                        $('#ship_name').addClass('error');
                    }
                    else if (ship_name != '') {
                        count -= 1;
                        $('#ship_name').removeClass('error');
                    }

                    if (address == '') {
                        count += 1;
                        $('#address').addClass('error');
                    }
                    else if (address != '') {
                        count -= 1;
                        $('#address').removeClass('error');
                    }

                    if (city == '') {
                        count += 1;
                        $('#city').addClass('error');
                    }
                    else if (city != '') {
                        count -= 1;
                        $('#city').removeClass('error');
                    }

                    if (state == '') {
                        count += 1;
                        $('#state').addClass('error');
                    }
                    else if (state != '') {
                        count -= 1;
                        $('#state').removeClass('error');
                    }

                    if (zip == '? number:1 ?') {
                        count += 1;
                        $('#zip').addClass('error');
                    }
                    else if (zip != '') {
                        count -= 1;
                        $('#zip').removeClass('error');
                    }

                    if (phone == '') {
                        count += 1;
                        $('#phone').addClass('error');
                    }
                    else if (phone != '') {
                        count -= 1;
                        $('#phone').removeClass('error');
                    }

                    if (email == '') {
                        count += 1;
                        $('#email').addClass('error');
                    }
                    else if (email != '') {
                        count -= 1;
                        $('#email').removeClass('error');
                    }
                }
//                if( == '') {count += 1;$('#').addClass('error');}
//                else if( != '') {count -= 1;$('#').removeClass('error');}
                console.log(pick_up_warehouse);
                if($scope.form_info['pick_up']) {
                    if(pick_up_warehouse == '') {
                        count += 1;
                        $('#warehouse_pick_up').addClass('error');
                    }
                    else if(pick_up_warehouse != '') {
                        count -= 1;
                        $('#warehouse_pick_up').removeClass('error');
                    }
                    if(agent_name == '') {
                        count += 1;
                        $('#agent_name').addClass('error');
                    }
                    else if(agent_name != '') {
                        count -= 1;
                        $('#agent_name').removeClass('error');
                    }
                }

                if(po == '') {
                    count += 1;
                    $('#po').addClass('error');
                }
                else if(po != '') {
                    count -= 1;
                    $('#po').removeClass('error');
                }
                return count;
            };

            $scope.pickUp = function () {
                if($scope.form_info['pick_up'] == true) {
                        $('#ship').hide();

                    $scope.form_info['ship'] = false;
                    $('#pick_up_date').show();
                    $('#pick_up_agent').show();
                    $('#pick_up_warehouse').show();
                }
                else {
                    $('#pick_up_date').hide();
                    $('#pick_up_agent').hide();
                    $('#pick_up_warehouse').hide();
                }
            };

        }]);



    </script>
{% endblock footer %}

{% block content %}
    <style>
        #floaty-box {
            float: right;
            position: fixed;
            top: 60vh;
            display: inline;
            right: 0;
        }
        .form_field {
            border: 1px solid rgba(149,152,154,.37);
            display: block;
            width: 100%;
            border-radius: 8px;
            height: 35px;
            font-size: 17px;
        }
        .cart_info {
            background-color: #fff !important;
            text-align: center;
            color: #078BB2;
            font-size: large;
        }
        .review_cart_button {
            padding-left: 6px;
            padding-right: 6px;
            margin-top: 20px;
            -webkit-box-shadow: 0 0 0 0 !important;
            height: 38px !important;
        }
        .button {
            display: inline-block;
            margin-bottom: 10px;
            background: #EEE;
            border: none;
            border-radius: 7px;
            color: #222;
            font-family: sans-serif;
            font-size: 16px;
            cursor: pointer;
            background-color: transparent;
        }
        .button:hover {
            color: #02B1F2;
        }
        .button:active,
        .button.is-checked {
            color: #02B1F2;
        }
        .button.is-checked {
            color: #02B1F2;
        }
        .button:active {
            box-shadow: inset 0 1px 10px hsla(0, 0%, 0%, 0.8);
        }
        .price_box_row {
            text-align: center;
        }
        .gray_box {
            border: 2px solid #EFEFEF;
        }
        .variant_price {
            font-weight: 600;
        }
        .variant_name {
            font-weight: 600;
        }
        .product_name {
            font-weight: 800;
            margin-top: 10px;
            margin-bottom: 10px;
            font-size: 18px;
        }
        .element-item {
            padding: 0px;
            min-height: 285px;
        }
        .col-md-2 {
            padding-left: 3px !important;
            padding-right: 3px !important;
        }

        .class_checkbox {
            width: 20px;
            height: 20px;
            background-image: url("/images/unchecked@2x.png");
            background-size: 20px 20px;
            background-repeat: no-repeat;
        }
        .class_checkbox.checked {
            background-image: url("/images/checked@2x.png");
            background-size: 20px 20px;
            background-repeat: no-repeat;
        }
        .price_box {
             max-width: 15%;
            width: 12%;
             display: inline-block;
            margin-left: 3px;
            margin-right: 3px;
         }
        #retailer-ship {
            width: 95%;
            margin-left: auto;
            margin-right: auto;
            margin-top: -15px;
        }
        select {
            border: 3px solid #02B1F2 !important;
            border-bottom: 3px solid #02B1F2 !important;
        }
        .form-control {
            margin-bottom: 0px !important;
        }
        button.btn.btn-raised.review_cart_button.disabled, .button-error {
            color: antiquewhite !important;
            background-color: lightcoral !important;
        }
        .error {
            border: 3px solid lightcoral !important;
        }
        ul
        {
            list-style-type: none;
            color: #AAAAAA;
        }
    </style>

{#<form data-toggle="validator" role="form">#}
<div ng-app="myApp" ng-controller="myCtrl" id="MainCtrl">
    <div class="table"  style="min-height: 100vh;">
        <div class="row">
            <div class="col-md-5">
                {% include '@Order/OrderProducts/order-form.html.twig' %}
            </div>
            <div class="col-md-5">
                <div class="table" style="background:rgba(2,177,242,.35); min-height: 250px;">
                    <br>
                    <center><h1 style="color: #fff;">Get More, Make More</h1></center>
                    <center><h2>Specials</h2></center>
                    <center><h4>Save up to 25% on closeout items!</h4></center>
                </div>
            </div>
        </div>
        <div id="error-message" style="padding-top: 40px;">

        </div>

        {%  if is_granted('ROLE_DISTRIBUTOR') or is_granted('ROLE_RETAILER') %}
        <div class="row" style="padding-bottom: 40px;padding-top: 20px;">
            <div class="col-md-6">
                <div class="button-group filters-button-group" style="text-align: center; margin-top: 29px;">
                    <button class="button is-checked" data-filter="*">ALL</button>
                    {% for category in categories %}
                        <button class="button" data-filter=".{{ category.id }}">{{ category.name }}</button>
                    {% endfor %}
                </div>
            </div>
            <div class="col-md-4">
                <div class="table" style="background-color: #02B1F2;">
                    <div class="row">
                        <div class="col-lg-3 col-md-4">
                            <center>Item (s)</center>
                            <input ng-model="cart_num_items" class="cart_info" style="width: 100%; height: 38px;" readonly>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <center>Total ($)</center>
                            {% verbatim %}
                            <div class="cart_info" style="width: 100%; height: 38px;    padding-top: 10px;" >{{ cart_total | currency:'$' }}</div>
                            {% endverbatim %}
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <button class="btn btn-raised review_cart_button" id="submit-button" ng-click="submitCart()" type="submit" style="width: 100%;">Review ></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="grid">
                {#{% for product in products %}#}
                {% verbatim %}
                    <div ng-repeat="product in products track by product.id" class="col-md-5 element-item {{ product.cat_ids }}">
                        <div class="product_image" style="display: table; margin: 0 auto;">
                            <img src="{{ product.path }}" style="border: 1px solid #95989A;max-width: 350px; max-height: 150px;">
                            <div class="product_name">
                                <center>{{ product.name }}</center>
                            </div>
                        </div>

                        <div class="price_box_row ">

                                <div ng-repeat="variant in product.variants track by variant.variant_id" class="price_box" style="align">
                                    <div class="variant_name gray_box">
                                        {{ variant.name }}
                                    </div>
                                    <div id="{{ variant.variant_id }}" class="variant_quantity gray_box">
                                        <input type="number"

                                               min="0"
                                               onclick="this.select()"
                                               style="text-align: center; width: 100%;    border: none;"
                                               ng-model="product_variant_order_quan[ variant.variant_id ]"
                                               ng-init="product_variant_order_quan[ variant.variant_id ] = 0"
                                               ng-change="updateCart({{ variant.variant_id }}, {{ variant.cost }}, {{ variant.inventory}})"
                                        >
                                    </div>
                                    <div class="variant_price">
                                        {{ variant.cost | currency}}
                                    </div>

                                    <div ng-if="variant.inventory < 10" class="variant_inventory">
                                        {{ variant.inventory > 10 ? '10+' : variant.inventory }} Avail
                                    </div>
                                    <div ng-if="variant.inventory >= 10" class="variant_inventory">
                                                &nbsp;
                                    </div>
                                </div>
                        </div>
                    </div>
 {% endverbatim %}
                {#{% endfor %}#}
            </div>
        </div>

                <div id="floaty-box" class="col-md-2 visible-lg">
                    <ul>
                        <li><h6 style="margin: 0;"><i id="side-all" class="fa fa-circle" aria-hidden="true"></i> All</h6></li>
                        {% for category in categories %}
                            <li><h6 style="margin: 0;"><i id="side-{{ category.id }}" class="fa fa-circle-thin" aria-hidden="true"></i> {{ category.name }}</h6></li>
                        {% endfor %}
                        <li><h6 style="margin: 0;color: #02B1F2;"><i id="side-review" class="fa fa-circle-thin" aria-hidden="true"></i> Review Order</h6></li>

                    </ul>
                </div>
        {% endif %}
    </div>
</div>
{#</form>#}
{% endblock %}
