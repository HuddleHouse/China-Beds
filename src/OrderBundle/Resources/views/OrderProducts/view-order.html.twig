{% extends ':default:layout.html.twig' %}

{% block title %}Order Products{% endblock %}
{% block page_title %}
    Order {{ channel.name }} Products
{% endblock page_title %}

{#{% block page_name %}#}
    {#<div class="">#}
        {#<img src="/images/logo-{{ channel.id }}.png" style="max-width: 121px;">#}
    {#</div>#}
{#{% endblock page_name %}#}

{% block actions %}
{% endblock actions %}

{% block footer %}
    <script>
        $(document).ready(function () {
            $('#part-table').DataTable({
                "iDisplayLength": 50, responsive: true, "fnDrawCallback": function(oSettings) {if (oSettings._iDisplayLength > oSettings.fnRecordsDisplay()) {$(oSettings.nTableWrapper).find('.dataTables_paginate').hide();}} });
        });

        var app = angular.module('myApp', ['ngMaterial']).config(function($interpolateProvider){
            $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
        });

        function isEmpty(value) {
            return angular.isUndefined(value) || value === '' || value === null || value !== value;
        }

        function valid_credit_card(value) {
            // accept only digits, dashes or spaces
            if (/[^0-9-\s]+/.test(value)) return false;

            // The Luhn Algorithm. It's so pretty.
            var nCheck = 0, nDigit = 0, bEven = false;
            value = value.replace(/\D/g, "");

            for (var n = value.length - 1; n >= 0; n--) {
                var cDigit = value.charAt(n),
                    nDigit = parseInt(cDigit, 10);

                if (bEven) {
                    if ((nDigit *= 2) > 9) nDigit -= 9;
                }

                nCheck += nDigit;
                bEven = !bEven;
            }

            return (nCheck % 10) == 0;
        }

        app.directive('ngMin', function() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function(scope, elem, attr, ctrl) {
                    scope.$watch(attr.ngMin, function(){
                        ctrl.$setViewValue(ctrl.$viewValue);
                    });
                    var minValidator = function(value) {
                        var min = scope.$eval(attr.ngMin) || 0;
                        if (!isEmpty(value) && value < min) {
                            ctrl.$setValidity('ngMin', false);
                            return undefined;
                        } else {
                            ctrl.$setValidity('ngMin', true);
                            return value;
                        }
                    };

                    ctrl.$parsers.push(minValidator);
                    ctrl.$formatters.push(minValidator);
                }
            };
        });

        app.directive('ngMax', function() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function(scope, elem, attr, ctrl) {
                    scope.$watch(attr.ngMax, function(){
                        ctrl.$setViewValue(ctrl.$viewValue);
                    });
                    var maxValidator = function(value) {
                        var max = scope.$eval(attr.ngMax) || Infinity;
                        if (!isEmpty(value) && value > max) {
                            ctrl.$setValidity('ngMax', false);
                            return undefined;
                        } else {
                            ctrl.$setValidity('ngMax', true);
                            return value;
                        }
                    };

                    ctrl.$parsers.push(maxValidator);
                    ctrl.$formatters.push(maxValidator);
                }
            };
        });

        app.controller('myCtrl', ['$scope', function($scope) {
            $scope.is_distributor = {{ is_dis }};
            $scope.is_retailer = {{ is_retail }};
            $scope.is_admin = {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_SALES_REP') or is_granted('ROLE_SALES_MANAGER') %}1{% else %}0{% endif %};
            $scope.cart_num_items = 0;
            $scope.product_variant_order_quan = [];
            $scope.cart = [];
            $scope.form_info = {};
            $scope.form_info.pick_up_date = new Date();
            $scope.form_info.pick_up = false;
            $scope.form_info.ship = false;
            $scope.payment_type = 'cc';
            $scope.cc = {};
            $scope.credit = {}
            $scope.ledgerTotal = {{ user.getLedgerTotal }};
            $scope.cart_total = {{ order.getTotal  }};
            $scope.is_paid = {{ is_paid }};
            $scope.admin_paid = 0;
            $scope.order_status = '{{ order.status.name }}';
            $scope.payments = [];

            {% if order.status.name == 'Pending' %}
                $scope.admin_paid = 1;
            {% endif %}

            $(document).ready(function () {
                if ($scope.is_paid == 1) {
                    $('#payment-type').val('{{ order.paymentType }}');
                }
                console.log("{{ is_paid }}");
            });

            $scope.changePayment = function () {
            };

            $scope.balance = function() {
                return (parseFloat($scope.cart_total) - $scope.paymentsTotal()).toFixed(2);
            }

            $scope.paymentsTotal = function() {
                var total = 0;
                $scope.payments.forEach(function(payment) {
                    total += parseFloat(payment.amount);
                });
                return total;
            }
            $scope.addPayment = function(payment) {
                if ( payment.method == 'credit' && payment.amount > $scope.getCreditBalance() ) {
                    payment.amount = $scope.getCreditBalance();
                }

                if ( payment.amount > $scope.balance() ) {
                    payment.amount = $scope.balance();
                }
                if ( payment.amount > 0 ) {
                    $scope.payments.push(payment);
                    $scope.resetPaymentDefaults();
                }
            }

            $scope.getCreditPaymentsTotal = function() {
                var total = 0;
                $scope.payments.forEach(function(payment) {
                    if ( payment.method == 'credit' ) {
                        total += parseFloat(payment.amount);
                    }
                });
                return total;
            }

            $scope.getCreditBalance = function() {
                return parseFloat($scope.ledgerTotal) - $scope.getCreditPaymentsTotal();
            }

            $scope.resetPaymentDefaults = function() {
                $scope.cc = {
                    'method':   'cc',
                    'label':   'Credit Card',
                    'amount':   $scope.balance()
                }
                $scope.credit = {
                    'method':   'credit',
                    'label':    'Credit',
                    'amount':   $scope.balance() > $scope.getCreditBalance() ? $scope.getCreditBalance() : $scope.balance()
                }
                $scope.ach = {
                    'method':   'ach',
                    'label':    'ACH',
                    'amount':   $scope.balance()
                }
            }

            $scope.validateCreditCardFormData = function(payment) {
                if ( payment.amount.length == 0 ) { return false; }
                if ( parseFloat(payment.amount) < 0 ) { return false; }
                if ( typeof payment.name === 'undefined' || payment.name.length == 0 ) { return false; }
                if ( typeof payment.number === 'undefined' || payment.number.length == 0 ) { return false; }
                if ( typeof payment.expires_month === 'undefined' || payment.expires_month.length == 0 ) { return false; }
                if ( typeof payment.expires_year === 'undefined' || payment.expires_year.length == 0 ) { return false; }
                if ( typeof payment.cvv === 'undefined' || payment.cvv.length == 0 ) { return false; }
                if ( !valid_credit_card(payment.number) ) { return false; }
                return true;
            }

            $scope.validateAchFormData = function(payment) {
                if ( payment.amount.length == 0 ) { return false; }
                if ( parseFloat(payment.amount) < 0 ) { return false; }
                return true;
            }

            $scope.validateCreditFormData = function(payment) {
                if ( payment.amount.length == 0 ) { return false; }
                if ( parseFloat(payment.amount) < 0 ) { return false; }
                if ( parseFloat(payment.amount) > $scope.getCreditBalance() ) { return false; }
                return true;
            }

            $scope.validatePaymentFormData = function(payment) {
                switch(payment.method) {
                    case 'cc':
                        return $scope.validateCreditCardFormData(payment);
                        break;
                    case 'ach':
                        return $scope.validateAchFormData(payment);
                        break;
                    case 'credit':
                        return $scope.validateCreditFormData(payment);
                        break;
                    default:
                        false;
                }
            }


            $scope.formValidate = function (type) {
//                var count = 0;
//
//                if($scope.is_admin == 1) {
//                    count = 0;
//                    $scope.ledgerTotal = $scope.cart_total;
//                }
//
//                if(count > 0)
//                    showErrorModal('Please fix the form errors.');
//                else if ($scope.cart_total > $scope.ledgerTotal && $scope.payment_type != 'cc')
//                    showErrorModal('You do not have enough in your ledger. Please add more to your ledger or pay with a Credit Card.');
//                else {
                    showSpinner();
                    $.ajax({
                        type: 'POST',
                        url: "{{ path('api_pay_for_order') }}",
                        dataType: 'json',
                        data: {
                            payments: $scope.payments,
                            order_id: {{ order.id}},
                            type: type
                        },
                        success: function (result) {
                            hideSpinner();
                            if ( !result.success ) {
                                showErrorModal('Error processing order:<br />' + result.error_message);
                            } else {
                                showSuccessModal('Order submitted successfully...Please wait.');
                                location.reload();
                            }
                        }
                    });
//                }

            };


            //not
            $scope.updateCart = function (variantId, cost, max) {
                if(typeof($scope.cart[variantId]) != "undefined" && $scope.cart[variantId] !== null) {
                    $scope.cart[variantId].quantity = $scope.product_variant_order_quan[variantId];
                }
                else {
                    $scope.cart[variantId] = {
                        variant_id: variantId,
                        quantity: $scope.product_variant_order_quan[variantId],
                        cost: cost
                    };
                }
                if($scope.product_variant_order_quan[variantId] > max) {
                    $('#'+variantId).addClass('error');
                    $('#submit-button').prop('disabled', true);
                    $('#submit-button').addClass('button-error');
                    console.log('error');
                }
                else {
                    $('#'+variantId).removeClass('error', 300);
                    $('#submit-button').prop('disabled', false);
                    $('#submit-button').removeClass('button-error');
                }

                $scope.calculateCart();
            };

            $scope.removePayment = function(payment) {
                var index = $scope.payments.indexOf(payment);
                $scope.payments.splice(index, 1);
                $scope.resetPaymentDefaults();
            }

            $scope.resetPaymentDefaults();

        }]);


    </script>
{% endblock footer %}

{% block content %}
    <style>
        .form-group label.control-label {
            font-size: 15px !important;
        }
        .my-stripe-button {
            height: 37px;
        }
        .cart_info {
            background-color: #fff !important;
            text-align: center;
            color: #078BB2;
            font-size: large;
        }
        .review_cart_button {
            padding-left: 6px;
            padding-right: 6px;
            margin-left: -13px;
            margin-top: 20px;
            -webkit-box-shadow: 0 0 0 0 !important;
            height: 38px !important;
        }
        .button {
            display: inline-block;
            margin-bottom: 10px;
            background: #EEE;
            border: none;
            border-radius: 7px;
            color: #222;
            font-family: sans-serif;
            font-size: 16px;
            cursor: pointer;
            background-color: transparent;
        }
        .button:hover {
            color: #02B1F2;
        }
        .button:active,
        .button.is-checked {
            color: #02B1F2;
        }
        .button.is-checked {
            color: #02B1F2;
        }
        .button:active {
            box-shadow: inset 0 1px 10px hsla(0, 0%, 0%, 0.8);
        }
        button.btn.btn-raised.review_cart_button.disabled, .button-error {
            color: antiquewhite !important;
            background-color: lightcoral !important;
        }
        .error {
            border: 2px solid lightcoral;
        }
        address {
            line-height: 1.5 !important;
        }
    </style>

    <div id="error-message">

    </div>
    <div ng-app="myApp" ng-controller="myCtrl" id="MainCtrl">
        <div class="table"  style="min-height: 100vh;">
            {% if order.status.name == 'Draft' %}
                <div class="row">
                    <div class="col-xs-12">
                        <div class="color-block">
                            Preview Only! Must confirm order to complete the process.
                        </div>
                    </div>
                    <!-- /.col -->
                </div>
            {% elseif order.status.name == 'Paid' %}
                <div class="row">
                    <div class="col-xs-12">
                        <div class="color-block-paid">
                           Order Placed
                        </div>
                    </div>
                    <!-- /.col -->
                </div>
            {% endif %}
            <div class="row" style="margin-top: 20px;">
                <div class="col-xs-12">
                    <h2 class="page-header">
                        <div class="pull-right">Date: {{ order.submitDate | date }}</div>
                        <span class="mdl-chip mdl-chip--contact" >
                            <span class="mdl-chip__contact mdl-color-text--white" style="background-color: {{ order.status.color }};">{{ order.status.nameFirstLetter }}</span>
                            <span class="mdl-chip__text">
                                {{ order.status.name }}
                            </span>
                        </span>
                    </h2>
                </div>
                <!-- /.col -->
            </div>
            <!-- info row -->
            <div class="row invoice-info">
                <!-- /.col -->
                <div class="col-sm-4 invoice-col">

                    {% if order.isPickUp == 0%}
                        <address>
                            <strong>Shipping To</strong>
                            {{ order.shipName }}<br>
                            {{ order.shipAddress }}, {{ order.shipAddress2 }}<br>
                            {{ order.shipCity }},  {{ order.shipZip }}<br>
                            Phone: {{ order.shipPhone }}<br>
                            Email: {{ order.shipEmail }}
                        </address>
                    {% else %}
                        <address>
                            <strong>Pick Up</strong><br>
                            <strong>Agent: </strong>{{ order.pickUpAgent }}<br>
                            <strong>Date:</strong> {{ order.pickUpDate | date }}<br>

                        </address>
                    {% endif %}
                </div>
                <!-- /.col -->
                <div class="col-sm-4 invoice-col">
                    <b>PO #{{ order.orderNumber }}</b><br>
                    <br>
                </div>
                <div class="col-sm-4 invoice-col">

                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
            <hr>
            {% for prod in product_data %}
                <!-- Table row -->
                <div class="row" style="">
                    <div class="col-xs-12 table-responsive">
                        <h4 class="page-header"><b>Warehouse Location: </b>{{ prod[0].warehouse_name }}</h4>
                        <table class="table table-striped">
                            <thead>
                            <tr>
                                <th style="width: 10%;">Qty</th>
                                <th>Product</th>
                                <th style="width: 24%;">Subtotal</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for item in prod %}
                                <tr>
                                    <td>{{ item.quantity }}</td>
                                    <td>{{ item.product_name }}</td>
                                    <td><h6 style="margin: 0;">${{ (item.subtotal) |number_format(2, '.', ',') }}</h6></td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                    <!-- /.col -->
                </div>
                <!-- /.row -->
            {% endfor %}

            {% if pop_items is not empty %}
                <!-- Table row -->
                <div class="row" style="">
                    <div class="col-xs-12 table-responsive">
                        <h4 class="page-header">POP Items</h4>
                        <table class="table table-striped">
                            <thead>
                            <tr>
                                <th style="width: 10%;">Qty</th>
                                <th>Product</th>
                                <th style="width: 24%;">Subtotal</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for item in pop_items %}
                                <tr>
                                    <td>{{ item.quantity }}</td>
                                    <td>{{ item.popItem.name }}: {{ item.popItem.description }}</td>
                                    <td><h6 style="margin: 0;">${{ (item.price*item.quantity) |number_format(2, '.', ',') }}</h6></td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                    <!-- /.col -->
                </div>
                <!-- /.row -->
            {% endif %}

            {% if manual_items_count != 0 %}
                <div class="row" style="margin-bottom: 30px;" >
                    <div class="col-md-12" >
                        <div class="table-responsive">
                            <table class="table no-margin">
                                <thead>
                                <center><h4>Manual Items</h4></center>
                                <tr>
                                    <th>Description</th>
                                    <th>Price</th>
                                </tr>
                                </thead>
                                <tbody>
                                {% for item in manual_items %}
                                <tr>
                                    <td>
                                        <div class="form-group is-empty" style="margin: 0px 0 0 0;">
                                            {{ item.description }}
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group is-empty" style="margin: 0px 0 0 0;">
                                            ${{ item.price | number_format(2, '.', ',') }}
                                        </div>
                                    </td>
                                </tr>
                                {% endfor %}
                            </table>
                        </div>
                    </div>
                </div>
            {% endif %}

            <div class="row" style="padding-top: 40px;">
                <!-- accepted payments column -->
                <div class="col-md-6">
                    <fieldset style="margin-top: 20px;margin-bottom: 50px;" ng-show="is_admin == 0  && !is_paid && balance()>0">
                        <legend>Payment</legend>
                        <div id="payment" class="form-group" style="margin-top: 0px;">
                            <label for="payment-type">Payment Type</label>
                            <select id="payment-type" class="form-control" ng-model="payment_type" ng-change="changePayment()" ng-disabled="is_paid == 1" required>
                                {% if not order.submittedForUser.hideCC %}
                                    <option value="cc">Pay with a Credit Card</option>
                                {% endif %}
                                {% if app.user.hasLedger and user.getLedgerTotal > 0 %}
                                    <option value="credit" ng-show="getCreditBalance()>0">Credit Balance ${[{getCreditBalance()}]}</option>
                                {% endif %}
                                {% if order.submittedForUser.achAccountNumber %}
                                    <option value="ach">ACH Account Ending {{ order.submittedForUser.achAccountNumber|slice(-4) }}</option>
                                {% endif %}
                            </select>
                        </div>
                        <div id="ach" ng-show="payment_type=='ach'&&!is_paid">
                            <div id="ach-amount" class="form-group">
                                <label class="col-sm-3 control-label" for="credit-amount">Amount</label>
                                <div class="col-sm-9">
                                    <input type="text" ng-min="0" ng-max="balance()" class="form-control" ng-model="ach.amount" name="ach-amount" id="ach-amount" placeholder="">
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <button type="button" class="btn btn-success btn-raised pull-right" ng-click="addPayment(ach)" ng-disabled="!validatePaymentFormData(ach)">Add ACH Payment</button>
                                </div>
                            </div>
                        </div>
                        <div id="credit" ng-show="payment_type=='credit'&&!is_paid">
                            <div id="credit-amount" class="form-group">
                                <label class="col-sm-3 control-label" for="credit-amount">Amount</label>
                                <div class="col-sm-9">
                                    <input type="text" ng-min="0" ng-max="getCreditBalance()" class="form-control" ng-model="credit.amount" name="credit-amount" id="credit-amount" placeholder="">
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <button type="button" class="btn btn-success btn-raised pull-right" ng-click="addPayment(credit)" ng-disabled="!validatePaymentFormData(credit)">Apply Credit</button>
                                </div>
                            </div>
                        </div>
                        <div id="cc" ng-show="payment_type=='cc'&&!is_paid">
                            <div id="cc-amount" class="form-group">
                                <label class="col-sm-3 control-label" for="card-amount">Amount</label>
                                <div class="col-sm-9">
                                    <input type="text" class="form-control" ng-min="0" ng-max="balance()" ng-model="cc.amount" name="card-amount" id="card-amount" placeholder="">
                                </div>
                            </div>
                            <div id="cc-name" class="form-group">
                                <label class="col-sm-3 control-label" for="card-holder-name">Name on Card</label>
                                <div class="col-sm-9">
                                    <input type="text" class="form-control" ng-model="cc.name" name="card-holder-name" id="card-holder-name" placeholder="Card Holder's Name">
                                </div>
                            </div>
                            <div id="cc-number" class="form-group">
                                <label class="col-sm-3 control-label" for="card-number">Card Number</label>
                                <div class="col-sm-9">
                                    <input type="text" class="form-control" ng-model="cc.number" name="card-number" id="card-number" placeholder="Debit/Credit Card Number">
                                </div>
                            </div>
                            <div id="cc-date" class="form-group">
                                <label class="col-sm-3 control-label" for="expiry-month">Expiration Date</label>
                                <div class="col-sm-9">
                                    <div class="row">
                                        <div class="col-xs-3">
                                            <select class="form-control col-sm-2" ng-model="cc.expires_month" name="expiry-month" id="expiry-month">
                                                <option selected value="">Month</option>
                                                <option value="01">Jan (01)</option>
                                                <option value="02">Feb (02)</option>
                                                <option value="03">Mar (03)</option>
                                                <option value="04">Apr (04)</option>
                                                <option value="05">May (05)</option>
                                                <option value="06">June (06)</option>
                                                <option value="07">July (07)</option>
                                                <option value="08">Aug (08)</option>
                                                <option value="09">Sep (09)</option>
                                                <option value="10">Oct (10)</option>
                                                <option value="11">Nov (11)</option>
                                                <option value="12">Dec (12)</option>
                                            </select>
                                        </div>
                                        <div class="col-xs-3">
                                            <select class="form-control" name="expiry-year" ng-model="cc.expires_year">
                                                <option selected value="">Year</option>
                                                {% for year in "now"|date("Y").."+10 years"|date("Y") %}
                                                <option value="{{ year }}">{{ year }}</option>
                                                {% endfor %}
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="cc-cvv" class="form-group">
                                <label class="col-sm-3 control-label" for="cvv">Card CVV</label>
                                <div class="col-sm-3">
                                    <input type="text" class="form-control" ng-model="cc.cvv" name="cvv" id="cvv" placeholder="Security Code" maxlength="4">
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <button type="button" class="btn btn-success btn-raised pull-right" ng-click="addPayment(cc)" ng-disabled="!validatePaymentFormData(cc)">Add Credit Card Payment</button>
                                </div>
                            </div>
                        </div>

                    </fieldset>
                    {% if order.path != '' and order.path != NULL %}
                    <div class="row">
                        <div class="col-md-6">
                            Invoice: <a href="{{ asset('uploads/manual_order_pdfs/' ~ order.path) }}" target="_blank">View</a><a href="{{ asset('uploads/manual_order_pdfs/' ~ order.path) }}" download target="_blank"> / Download</a>
                        </div>
                    </div>
                    {% endif %}
                    <h5 style="margin: -14px 0 16px;">Comments</h5>
                    <p class="text-muted well well-sm no-shadow" style="margin-top: 10px;    min-height: 50px;">
                        {{ order.comments }}
                    </p>
                </div>
                <div class="col-md-6">
                    {% if order.status.name == 'Paid' or order.status.name == 'Shipped' %}
                        <h4>Shipping Info/Tracking Numbers</h4>
                        <ul>
                            {% for label in order.shippingLabels %}
                                <li>Tracking:
                                    <a href ="https://www.fedex.com/apps/fedextrack/?tracknumbers={{ label.trackingNumber }}" target="_blank">
                                        {{ label.trackingNumber }}
                                    </a>
                                    {% if is_granted('ROLE_ADMIN') ==1  %}
                                    -
                                    <a class="btn btn-raised btn-default btn-sm" href="/{{ label.webPath }}" download>
                                        <i class="fa fa-download" aria-hidden="true"></i>
                                        Download Label
                                    </a>
                                    {% endif %}
                                </li>

                            {% endfor %}
                        </ul>
                    {% endif %}
                    <div class="table-responsive" style="margin-top: 46px;">
                        <table class="table">
                            <tbody>
                            <tr>
                                <th >Subtotal:</th>
                                <td>${{ order.getSubTotal |number_format(2, '.', ',') }}</td>
                            </tr>
                            {% if order.isPickUp == 0%}
                            <tr>
                                <th>Shipping: {{ order.getShipDescription }}</th>
                                <td>${{ order.getShipping |number_format(2, '.', ',') }}</td>
                            </tr>
                            {% endif %}
                            <tr>
                                <th>Total Due:</th>
                                <td>${{ order.getTotal |number_format(2, '.', ',') }}</td>
                            </tr>

                            {% if is_paid %}
                            {% for payment in order.orderPayments %}
                                <tr >
                                    <th>{{ payment.method|upper }}</th>
                                    <td>${{ payment.amount|number_format(2, '.', ',') }} {% if payment.detail %}(x{{ payment.detail }}){% endif %}</td>
                                </tr>
                            {% endfor %}
                                <tr style="border-top:2px solid black;">
                                    <th>Balance:</th>
                                    <td>${{ order.balance|number_format(2, '.', ',') }}</td>
                                </tr>
                            {% else %}
                                <tr ng-repeat="payment in payments track by $index">
                                    <th><i class="fa fa-times" ng-click="removePayment(payment)"></i> {[{ payment.label }]}</th>
                                    <td>{[{ payment.amount|currency }]}</td>
                                </tr>
                                <tr style="border-top:2px solid black;">
                                    <th>Balance:</th>
                                    <td>${[{balance()}]}</td>
                                </tr>
                            {% endif %}

                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- this row will not appear when printing -->
                <div class="row no-print">
                    <div class="col-md-6">

                    </div>
                    <div class="col-xs-12 col-md-6">
                        <div class="alert alert-error hide" id="process-error">Test</div>
                        <button onclick="printPage()" target="_blank" class="btn btn-default"><i class="fa fa-print"></i> Print</button>

                        <button type="button" ng-show="admin_paid == 0 && is_admin == 1" ng-click="formValidate('admin')" class="btn btn-success btn-raised" style="margin-right: 5px;float: right;">
                            Submit Order for User
                        </button>
                        <button type="button" ng-show="is_paid == 0 && is_admin == 0 && balance() == 0" ng-click="formValidate('complete')" class="btn btn-success btn-raised" style="margin-right: 5px;float: right;">
                            Complete Order
                        </button>
                        <a ng-show="order_status=='Draft'" href="{{ path('order_products_edit',{"id_channel":  channel.id, "id_order":  order.id }) }}" class="btn btn-info btn-raised" style="margin-right: 5px;float: right;">
                            Edit Order
                        </a>
                    </div>
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->

        </div>
    </div>


{% endblock %}
