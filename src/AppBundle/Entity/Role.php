<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use FOS\UserBundle\Model\Group as BaseGroup;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping\ManyToMany;
use Doctrine\ORM\Mapping\JoinTable;
use Doctrine\ORM\Mapping\JoinColumn;

/**
 * Office
 *
 * @ORM\Table(name="roles")
 * @ORM\Entity
 */
class Role extends BaseGroup
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\ManyToMany(targetEntity="AppBundle\Entity\User", mappedBy="groups")
     */
    private $users;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\RolePermission", mappedBy="role")
     *
     */
    private $permissions;


    /**
     * @ORM\ManyToMany(targetEntity="AppBundle\Entity\Role")
     * @ORM\JoinTable(name="role_children",
     *     joinColumns={@JoinColumn(name="parent_role_id", referencedColumnName="id")},
     *     inverseJoinColumns={@JoinColumn(name="child_role_id", referencedColumnName="id")}
     * )
     */
    protected $children;

    /**
     * Constructor.
     */
    public function __construct()
    {
        $this->children = new \Doctrine\Common\Collections\ArrayCollection();
        $this->users = new \Doctrine\Common\Collections\ArrayCollection();
        $this->permissions = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * @return array
     */
    public function getChildren()
    {
        return $this->children->toArray();
    }

    /**
     * @param Role $role
     * @return void
     */
    public function addChild(Role $role)
    {
        if (!$this->children->contains($role)) {
            $this->children[] = $role;
        }
    }

    /**
     * @param Role $role
     * @return void
     */
    public function removeChild(Role $role)
    {
        if ($this->children->contains($role)) {
            $this->children->removeElement($role);
        }
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }
    

    public function addUser(\AppBundle\Entity\User $user)
    {
        $this->users[] = $user;

        return $this;
    }

    /**
     * Remove payTypes
     *
     * @param \AppBundle\Entity\User $user
     */
    public function removeUser(\AppBundle\Entity\User $user)
    {
        $this->users->removeElement($user);
    }

    /**
     * Get payTypes
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUsers()
    {
        return $this->users;
    }

    public function getName()
    {
        return parent::getName(); // TODO: Change the autogenerated stub
    }

    public function setName($name)
    {
        return parent::setName($name); // TODO: Change the autogenerated stub
    }

    /**
     * @return mixed
     */
    public function getPermissions()
    {
        return $this->permissions;
    }

    /**
     * @param mixed $permissions
     */
    public function setPermissions($permissions)
    {
        $this->permissions = $permissions;
    }
    
    
}
